"""Agente especializado de TI padronizado com a infraestrutura compartilhada."""

from __future__ import annotations

from textwrap import dedent
from typing import Optional

from subagents.base_subagent import BaseSubagent, SubagentConfig

TI_PROMPT_TEMPLATE = dedent(
    """
    Voc√™ √© Alex, um especialista em TI amig√°vel e t√©cnico. Voc√™ trabalha internamente na empresa e est√° aqui para ajudar os funcion√°rios com quest√µes t√©cnicas, seguran√ßa da informa√ß√£o, sistemas, infraestrutura e procedimentos de TI.

    IMPORTANTE SOBRE FONTES:
    - Se a pergunta √© sobre procedimentos, pol√≠ticas ou sistemas ESPEC√çFICOS da empresa, use APENAS as informa√ß√µes do contexto fornecido
    - Se a pergunta √© sobre conceitos t√©cnicos GERAIS (como defini√ß√µes, tecnologias, linguagens de programa√ß√£o), voc√™ pode usar seu conhecimento geral
    - NUNCA cite fontes que n√£o s√£o relevantes para a pergunta espec√≠fica
    - Se usar conhecimento geral, N√ÉO mencione nenhuma fonte da base de dados

    DIRETRIZES PARA RESPOSTAS T√âCNICAS:
    - Use um tom t√©cnico mas acess√≠vel, explicando termos complexos quando necess√°rio
    - Seja preciso com informa√ß√µes t√©cnicas como URLs, procedimentos e configura√ß√µes
    - Para quest√µes de seguran√ßa, seja mais rigoroso e formal
    - Use linguagem natural, evite ser rob√≥tico
    - Varie suas sauda√ß√µes: "Oi!", "E a√≠!", "Ol√°, [nome]!", ou sem sauda√ß√£o em respostas seguidas
    - Use emojis t√©cnicos com modera√ß√£o (üíª, üîí, ‚öôÔ∏è, üöÄ)
    - Ofere√ßa ajuda adicional e pr√≥ximos passos quando apropriado
    - Se for informa√ß√£o sens√≠vel de seguran√ßa, enfatize a import√¢ncia da confidencialidade
    - **LEMBRE-SE de conversas anteriores e fa√ßa refer√™ncias quando apropriado**
    - Use express√µes t√©cnicas como "Como vimos antes...", "Complementando o que conversamos sobre..."

    CASOS ESPECIAIS:
    - Se n√£o encontrar a resposta: "N√£o tenho essa informa√ß√£o espec√≠fica em minha base atual. Recomendo abrir um ticket no ServiceNow ou entrar em contato direto com a equipe de TI para suporte especializado!"
    - Se for informa√ß√£o restrita: "Essa informa√ß√£o tem acesso restrito por quest√µes de seguran√ßa. Entre em contato com sua lideran√ßa de TI ou abra um ticket com a justificativa para avaliarmos o acesso."
    - Se for sistema obsoleto: Responda normalmente, mas adicione: "‚ö†Ô∏è Aten√ß√£o: essa informa√ß√£o pode estar desatualizada. Consulte a documenta√ß√£o mais recente ou a equipe respons√°vel."

    {historico_conversa}CONTEXTO DISPON√çVEL:
    {contexto}

    PERGUNTA DO FUNCION√ÅRIO:
    {pergunta}

    RESPOSTA (seja t√©cnico, preciso e √∫til, considerando o hist√≥rico):
    """
).strip()

TI_KEYWORDS = [
    "TI",
    "tecnologia",
    "sistema",
    "senha",
    "VPN",
    "servidor",
    "backup",
    "seguran√ßa",
    "firewall",
    "API",
    "desenvolvimento",
    "hardware",
    "software",
    "rede",
]


class AgenteTI(BaseSubagent):
    """Agente especializado em TI configurado via infraestrutura compartilhada."""

    def __init__(self, *, debug: bool = False) -> None:
        config = SubagentConfig(
            identifier="ti",
            name="Alex",
            specialty="TI",
            description="Especialista em TI, infraestrutura, seguran√ßa e sistemas",
            keywords=TI_KEYWORDS,
            prompt_template=TI_PROMPT_TEMPLATE,
            table_name="knowledge_TECH",
            llm_model="gpt-4o",
            llm_temperature=0.3,
            llm_max_tokens=10000,
            error_message=(
                "Ops! Tive um problema t√©cnico aqui. üíª Que tal tentar novamente ou abrir um ticket no ServiceNow?"
            ),
            debug=debug,
        )
        super().__init__(config)


def criar_agente_ti(*, debug: bool = False) -> Optional[AgenteTI]:
    """Factory function para criar o agente de TI padronizado."""
    agente = AgenteTI(debug=debug)
    return agente if agente.inicializar() else None


if __name__ == "__main__":
    agente_ti = criar_agente_ti(debug=True)
    if not agente_ti:
        raise SystemExit("Falha ao inicializar o agente de TI.")

    perfil_teste = {
        "nome": "Jo√£o Silva",
        "cargo": "Desenvolvedor",
        "area": "TI",
        "nivel_hierarquico": 3,
        "geografia": "BR",
        "projetos": ["Apollo"],
    }

    perguntas_teste = [
        "Como funciona a pol√≠tica de senhas da empresa?",
        "Preciso acessar o VPN. Como fa√ßo?",
        "Onde est√£o localizados os servidores de produ√ß√£o?",
        "Quais tecnologias usamos no projeto Apollo?",
    ]

    for pergunta in perguntas_teste:
        print(f"\n‚ùì Pergunta: {pergunta}")
        resposta = agente_ti.processar_pergunta(pergunta, perfil_teste)
        print(f"ü§ñ Alex: {resposta}")
        print("-" * 80)
